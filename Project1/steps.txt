pip install zenml["server"]
zenml --version 

zenml init
zenml downgrade   # to avoid the errors and warnings 

# we will not use csv file rather we will use data that is retrieved from sql database 
# made src folder to contain the datasets
# made pipeline folder , it will contain all the pipeline 
# made saved folder
# made steps folder -> contains the steps folder 

# inside steps 
    made injest_data  to injest all the data inside it 
    made file to clean the data
    made file to train the data
    made file to evaluate the data

# made pipeline

NOTE:
Basically the output after the run will give u tree like structure which is called artifacts .


# The Artifacts means the meta , attributes and visualization of the data that is being shown whne clicked to the pipeline link .

# Enabling cache in the pipeline 
    If there is no code change in the section , then it uses its previous version so that it will load very fast and will not rerender it again .


Then data cleaning is done by adding models in the clean data in src folder and use it in clean data model

The abstract model are made for different methods and then these methods are implemented .
The main abstract model is added in the src function and the methods are integrated in steps .


Now left with Experiment tracker and deployment .
Experiment Tracker is basically used to track the improvements and used to compare the made model 
with the previous ones . It can be used to compare the 1st model with the 30th model .

NOTE:
zenml stack will tell that the model has experiment tracker that it will stack the prev model data .
can check it out from -> zeml stack list

can check out the stack configuration from -> zenml stack describe
the pipeline that we are using is ORCHESTRATOR , the artifacts are stored in ARTIFACTS_STORE

# deployment
For deployment purpose we need ML4 to do it .
















